{"version":3,"sources":["../src/DiceContainer.js"],"names":["DiceContainer","props","state","totalValue","numDice","dice","rollCount","rollDone","bind","rollAll","getDiceTotal","die","rollDie","total","getValue","setState","totalCb","prevProps","prevState","splice","i","push"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;;;;;;;IAEqBA,a;;;AAEnB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8HACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa;AACXC,kBAAYF,MAAMG,OAAN,GAAgB;AADjB,KAAb;AAGA,UAAKC,IAAL,GAAY,EAAZ;AACA,UAAKC,SAAL,GAAiB,CAAjB;;AAEA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,OAAf;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,OAApB;;AAViB;AAYlB;;;;8BAES;AACR,WAAKF,SAAL,GAAiB,CAAjB;AADQ;AAAA;AAAA;;AAAA;AAER,6BAAgB,KAAKD,IAArB,8HAA2B;AAAA,cAAlBM,GAAkB;;AACzB,cAAGA,QAAQ,IAAX,EAAiB;AACf,iBAAKL,SAAL;AACAK,gBAAIC,OAAJ;AACD;AACF;AAPO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQT;;;+BAEU;AACT,WAAKN,SAAL;AACA,UAAI,KAAKA,SAAL,IAAkB,CAAtB,EAAyB;AACvB,aAAKI,YAAL;AACD;AACF;;;mCAEc;AACb,UAAIG,QAAQ,CAAZ;AADa;AAAA;AAAA;;AAAA;AAEb,8BAAgB,KAAKR,IAArB,mIAA2B;AAAA,cAAlBM,GAAkB;;AACzB,cAAGA,QAAQ,IAAX,EAAiB;AACfE,qBAASF,IAAIG,QAAJ,EAAT;AACD;AACF;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOb,WAAKC,QAAL,CAAc,EAACZ,YAAYU,KAAb,EAAd;AACA,WAAKZ,KAAL,CAAWe,OAAX,CAAmBH,KAAnB;AACD;;;wCAEmB;AAClB,WAAKZ,KAAL,CAAWe,OAAX,CAAmB,KAAKd,KAAL,CAAWC,UAA9B;AACD;;;uCAEkBc,S,EAAWC,S,EAAW;AACvC,UAAID,UAAUb,OAAV,KAAsB,KAAKH,KAAL,CAAWG,OAArC,EAA8C;AAC5C,aAAKM,YAAL;AACD;AACF;;;6BAEQ;AAAA;;AAAA,UACDT,KADC,GACS,IADT,CACDA,KADC;;AAEP,UAAII,OAAO,EAAX;AACA,WAAKA,IAAL,CAAUc,MAAV,CAAiBlB,MAAMG,OAAvB,EAAgC,MAAMH,MAAMG,OAA5C;;AAHO,iCAIEgB,CAJF;AAKLf,aAAKgB,IAAL,CAAU,0DAASpB,KAAT,IAAgB,KAAKmB,CAArB,EAAwB,UAAU,OAAKb,QAAvC,EAAiD,KAAK;AAAA,mBAAO,OAAKF,IAAL,CAAUe,CAAV,IAAeT,GAAtB;AAAA,WAAtD,IAAV;AALK;;AAIP,WAAK,IAAIS,IAAI,CAAb,EAAgBA,IAAInB,MAAMG,OAA1B,EAAmCgB,GAAnC,EAAwC;AAAA,cAA/BA,CAA+B;AAEvC;;AAED,aACE;AAAA;AAAA,UAAK,WAAU,MAAf;AACGf;AADH,OADF;AAKD;;;;;;eAnEkBL,a;;;;;;;;;;gCAAAA,a","file":"DiceContainer.js","sourcesContent":["import React, { Component } from 'react'\nimport Die from './Die'\n\nimport './styles.scss'\n\nexport default class DiceContainer extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      totalValue: props.numDice * 6\n    }\n    this.dice = []\n    this.rollCount = 0\n\n    this.rollDone = this.rollDone.bind(this)\n    this.rollAll = this.rollAll.bind(this)\n    this.getDiceTotal = this.getDiceTotal.bind(this)\n\n  }\n\n  rollAll() {\n    this.rollCount = 0\n    for (let die of this.dice) {\n      if(die !== null) {\n        this.rollCount++\n        die.rollDie()\n      }\n    }\n  }\n\n  rollDone() {\n    this.rollCount--;\n    if (this.rollCount <= 0) {\n      this.getDiceTotal()\n    }\n  }\n\n  getDiceTotal() {\n    let total = 0\n    for (let die of this.dice) {\n      if(die !== null) {\n        total += die.getValue()\n      }\n    }\n    this.setState({totalValue: total})\n    this.props.totalCb(total)\n  }\n\n  componentDidMount() {\n    this.props.totalCb(this.state.totalValue)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.numDice !== this.props.numDice) {\n      this.getDiceTotal()\n    }\n  }\n\n  render() {\n    let { props } = this\n    let dice = []\n    this.dice.splice(props.numDice, 100 - props.numDice)\n    for (let i = 0; i < props.numDice; i++) {\n      dice.push(<Die {...props} key={i} rollDone={this.rollDone} ref={die => this.dice[i] = die} />)\n    }\n\n    return (\n      <div className=\"dice\">\n        {dice}\n      </div>\n    )\n  }\n}\n"]}