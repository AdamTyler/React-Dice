{"version":3,"sources":["../src/TestApp.js"],"names":["React","Component","ReactDice","TestApp","props","state","outline","outlineColor","dieSize","disableIndividual","margin","numDice","sides","rollTime","faceColor","dotColor","diceTotal","rolling","handleChange","bind","rollDone","rollAll","e","value","target","type","parseInt","min","max","name","setState","reactDice","colorStyle","height","display","c"],"mappings":"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","file":"TestApp.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactDice from './ReactDice'\n\nclass TestApp extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      outline: false,\n      outlineColor: '#000000',\n      dieSize: 60,\n      disableIndividual: false,\n      margin: 15,\n      numDice: 4,\n      sides: 6,\n      rollTime: 2,\n      faceColor: '#FF00AC',\n      dotColor: '#1eff00',\n      diceTotal: 0,\n      rolling: false\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.rollDone = this.rollDone.bind(this)\n    this.rollAll = this.rollAll.bind(this)\n  }\n\n  handleChange(e) {\n    let value = e.target.value\n    if (e.target.type === 'number') {\n      value = parseInt(e.target.value, 10)\n      if (value < e.target.min) {\n        value = e.target.min\n      } else if (value > e.target.max) {\n        value = e.target.max\n      }\n    }\n    if (e.target.type === 'checkbox') {\n      value = !this.state[e.target.name]\n    }\n    this.setState({\n      [e.target.name]: value\n    })\n  }\n\n  rollDone(value) {\n    this.setState({diceTotal: value, rolling: false})\n  }\n\n  rollAll() {\n    this.reactDice.rollAll()\n    this.setState({rolling: true})\n  }\n\n  render() {\n    let { state } = this\n    let colorStyle = {height: '2.375rem'}\n    return (\n      <div className=\"dice-test\">\n        <form className=\"row controls align-items-end\">\n          <fieldset className=\"form-group col\">\n            <label htmlFor=\"numDice\">Dice</label>\n            <input type=\"number\" name=\"numDice\" id=\"numDice\" className=\"form-control\"\n              value={state.numDice} onChange={this.handleChange} min=\"1\" max=\"100\"/>\n          </fieldset>\n          <fieldset className=\"form-group col\">\n            <label htmlFor=\"faceColor\">Face Color</label>\n            <input type=\"color\" name=\"faceColor\" id=\"faceColor\" className=\"form-control\" style={colorStyle}\n              value={state.faceColor} onChange={this.handleChange} />\n          </fieldset>\n          <fieldset className=\"form-group col\">\n            <label htmlFor=\"dotColor\">Dot Color</label>\n            <input type=\"color\" name=\"dotColor\" id=\"dotColor\" className=\"form-control\" style={colorStyle}\n              value={state.dotColor} onChange={this.handleChange} />\n          </fieldset>\n          <fieldset className=\"form-group col\">\n            <label htmlFor=\"dieSize\">Die Size (px)</label>\n            <input type=\"number\" name=\"dieSize\" id=\"dieSize\" className=\"form-control\"\n              value={state.dieSize} onChange={this.handleChange} min=\"30\" max=\"200\"/>\n          </fieldset>\n          <fieldset className=\"form-group col\">\n            <label htmlFor=\"rollTime\">Roll Time (seconds)</label>\n            <input type=\"number\" name=\"rollTime\" id=\"rollTime\" className=\"form-control\"\n              value={state.rollTime} onChange={this.handleChange} min=\"1\" max=\"4\"/>\n          </fieldset>\n          <fieldset className=\"form-group col\">\n            <div className=\"form-check\">\n              <label className=\"form-check-label\">\n                <input type=\"checkbox\" className=\"form-check-input\" name=\"outline\" id=\"outline\"\n                  checked={state.outline}  onChange={this.handleChange} />\n                {'  '}Outline\n              </label>\n            </div>\n            <div>\n              <input type=\"color\" name=\"outlineColor\" id=\"outlineColor\" className=\"form-control\" style={colorStyle}\n                value={state.outlineColor} onChange={this.handleChange}\n                disabled={!this.state.outline}/>\n            </div>\n          </fieldset>\n        </form>\n        <div className=\"row info\">\n          <div className=\"col\">\n            <h4>\n              <button className=\"btn btn-primary\" onClick={this.rollAll}>Roll All</button>\n              {'   '} or click individual dice\n            </h4>\n          </div>\n          <fieldset className=\"form-group col\">\n            <div className=\"form-check\">\n              <label className=\"form-check-label\">\n                <input type=\"checkbox\" className=\"form-check-input\" name=\"disableIndividual\" id=\"disableIndividual\"\n                  checked={state.disableIndividual} onChange={this.handleChange} />\n                {' '} Disable individual roll on click\n              </label>\n            </div>\n          </fieldset>\n\n          <div className=\"col\">\n            <h4 className=\"text-primary\">Dice Total:\n              <span style={{display: this.state.rolling ? 'none':'inline-block'}}>\n                {this.state.diceTotal}\n              </span>\n              <div className=\"sk-cube-grid\" style={{display: this.state.rolling ? 'inline-block':'none'}}>\n                <div className=\"sk-cube sk-cube1\"></div>\n                <div className=\"sk-cube sk-cube2\"></div>\n                <div className=\"sk-cube sk-cube3\"></div>\n                <div className=\"sk-cube sk-cube4\"></div>\n                <div className=\"sk-cube sk-cube5\"></div>\n                <div className=\"sk-cube sk-cube6\"></div>\n                <div className=\"sk-cube sk-cube7\"></div>\n                <div className=\"sk-cube sk-cube8\"></div>\n                <div className=\"sk-cube sk-cube9\"></div>\n              </div>\n            </h4>\n          </div>\n        </div>\n        <div className=\"row dice\">\n          <div className=\"col\">\n            <ReactDice {...this.state} rollDone={this.rollDone}\n              ref={c=> this.reactDice = c} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TestApp\n"]}